##adding watermark
+ geom_text(x=,y=, label='Not for Publication or Use Outside This Report')

##adding a title
+ labs(title="titleText")

##changeing the overall size of the graph's visual output
{r fig.width=15, fig.height=3}

##removing legend
+ theme(legend.position='none') 

##removing legend title
+ theme(legend.title=element_blank()) 

##changing legend labels
+ theme(name="axis title", labels=c())

##changing legend title
+ labs(fill="legend title")  #fill/color or whatever aspect the current legend is for  #basically, whatever you are using as your 3rd element, fill= or color=, that your legend is going to be describing

##managing multiple legends
+ guides(color='', size='', linewidth='', fill='')
	##removing a specific legend
	+ guides(linewidth='none')
	##adjusting aesthetics of the legend icons
	+ guides(variable=guide_legend(override.aes=list(parameter=)))
	#change options
		+ guides(color=guide_legend(override.aes=list(linewidth=1.5)) #linewidth as an example
		guide_legend(theme(legend.title=element_text(size=, face="", color=""))) #change text size, color, or font of the legend title
		guide_legend(title="", theme(legend.title.position="right/left/top/bottom")) #change the legend title position
		guide_legend(theme(legend.text.position="right/left/top/bottom", legend.text=element_text(hjust=))) #change the legend label positions
		guide_legend(override.aes=list(alpha=1)) #transparency
		guide_legend(nrow=) #number of rows the legend will be formatted into
		guide_legend(ncol=) #number of columns the legend will be formatted into
		guide_legend(nrow=, theme=theme(legend.byrow=TRUE)) #how do you want the values to populate onto the legend
		guide_legend(reverse=TRUE) #reverse the order of how the values populate the legend

##reordering a legend title & bar order
df$colname <- factor(df$colname, levels=c('lvl1', 'lvl2', 'lvl3', 'lvl4'))  #this allows you to place the values in whatever order you want for your graph

##Linetypes
(0 = blank, 1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash, 5 = longdash, 6 = twodash)
	##customizing a dotdash line
	linetype = "3313" #each digit represents the number of consecutive pixels
		#alternates "on/off"
		#3313 would be 3 on, 3 off, 1 on, 3 off
		#ie ***   *   ***   *   ***   *   

##Shapes
#shape options 1-25
https://www.sthda.com/english/wiki/ggplot2-point-shapes 

##change colors
+ scale_fill_manual(values=c())

##change linewidth scale
+ scale_linewidth(name=element_blank() or '', range=c(1.25,2))

##changing graph and axis titles
+ labs(title="graph title", y="y axis title", x="x axis title")

##add a bold line for the axis
+ theme( axis.line = element_line(colour = "darkblue", size = 1, linetype = "solid"))

##removing axis labels
+ theme(axis.title.x=element_blank(), axis.title.y=element_blank())  

##rotating axis labels
+ theme(axis.text.x = element_text(angle = 60, hjust = 1))

##changing tick mark labels
+ scale_y_continuous(limits=c(0,100), breaks=c(25,50,75,100), labels=c("25%","50%","75%","100%"))

##rotating the entire 180 degrees on an axis
+scale_y_reverse()
+scale_x_reverse()

##changing line thickness and color
+ geom_line(linewidth=.2)

##changing graph and axis titles
+ ggtitle("graph title")
+ labs(title="graph title", y="y axis title", x="x axis title")
+ theme(plot.title = element_text(family, face, colour, size), axis.title.x = element_text(family, face, colour, size), axis.title.y = element_text(family, face, colour, size))
	#family : font family
	#face : font face. Possible values are “plain”, “italic”, “bold” and “bold.italic”
	#colour : text color
	#size : text size in pts
	#hjust : horizontal justification (in [0, 1])
	#vjust : vertical justification (in [0, 1])
	#lineheight : line height. In multi-line text, the lineheight argument is used to change the spacing between lines.
	#color : an alias for colour

##adding text labels/annotation on graph
+ geom_text()
	# Simple scatter plot
	sp <- ggplot(df, aes(wt, mpg, label = rownames(df))) + geom_point() + geom_text()
	# Change the size of the texts
	+ geom_text(size=6)
	# Change vertical and horizontal adjustement
	+  geom_text(hjust=0, vjust=0)
	# Change fontface. Allowed values : 1(normal),
	# 2(bold), 3(italic), 4(bold.italic)
	+ geom_text(aes(fontface=2))
	# change font
	+ geom_text(family="Times New Roman")
+ annotate()
	# manually placing a point on a graph
	+ annotate(geom="point", x=, y=, size=, color='')
	# adding text labels at one location
	+ annotate(geom="text", label="labelText", x=, y=, color='')
+ geom_label(label=, nudge_x =, nudge_y =, check_overlap=T, label.padding=unit(padding=,"lines"), label_size=, color=, fill=)
	# more info http://www.sthda.com/english/wiki/ggplot2-texts-add-text-annotations-to-a-graph-in-r-software

##making rounded bar graphs
+ geom_chicklet(radius=grid::unit(5, "mm")) #replace geom_bar with this

##making rounded line ends for line graph
+ geom_line(aes(), lineed="round")

##adding a regression trendline to a scatterplot
+ geom_smooth(method=lm, linewidth=2, color="#1A69B1", fill="purple")
	#adding a prediction regression trendline
	+ geom_smooth(method=lm, fullrange=TRUE)

##making side-by-side bar graph
+ geom_bar(stat = "identity", position = "dodge")

##preventing bars from expanding to cover zero or null values at that x-value
##fixing bar width
+ geom_bar(stat='identity', position=position_dodge(preserve = 'single'), aes(fill=))

##making multiple line graph
ggplot(data, aes(x= , y= , color=as.factor( `grouping column` ))) +
  geom_line(stat="identity")

	##functions used: +theme(), +labs(), +scale_fill_manual(), +scale_x_continuous(), +scale_y_continuous(), geom_bar(), geom_chicklet(), geom_smooth(), scale_y_reverse(), scale_x_reverse(), ggtitle(), geom_line(), factor(),
		+geom_text(), +geom_annotate(), position_dodge(), +guides(), +scale_linewidth(), +annotate(), +guide_legend()
	##concepts involved:
		## adding a title
		## removing legend
		## removing axis labels
		## changing legend label
		## reordering a legend title & bar order
		## change colors
		## add a bold line for the axis
		## changing tick mark labels
		## making rounded bar graphs
		## adding a regression trendline to a scatterplot
		## adding a prediction regression trendline
		## rotate graph
		## side-by-side bar graph
		## multiple line graph
		## changing line thickness
		## changing graph and axis titles
		## adding text to graph/ adding text on graph
		## adding watermark
		## preventing bars from expanding to cover zero or null values at that x-value
		## fixing bar width
		## managing multiple legends
		## shapes
		## linetypes
		## removing a specific legend
		## adjusting aesthetics of the legend icons
		##changeing the overall size of the graph's visual output
